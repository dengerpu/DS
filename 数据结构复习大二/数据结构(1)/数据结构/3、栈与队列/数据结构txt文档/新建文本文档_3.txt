#include<stdio.h>
#include<stdlib.h>
typedef struct lb
{
	int a;
	struct lb * pn;
}NODE,*pNODE;
typedef struct z
{
	pNODE pTOP;
	pNODE pBOTTOM;
}STACK,* pSTACK;
void init(pSTACK ps)
{
	ps->pTOP=(pNODE)malloc(sizeof(NODE));
	ps->pBOTTOM=ps->pTOP;
	ps->pTOP->pn=NULL;
}
void push(pSTACK ps,int val)
{
	pNODE pNEW=(pNODE)malloc(sizeof(NODE));
	if(NULL==pNEW)
	{
		exit(-1);
	}
	pNEW->a=val;
	pNEW->pn=ps->pTOP;
	ps->pTOP=pNEW;
}
int pop(pSTACK ps)
{
	int e=ps->pTOP->a;
	ps->pTOP=ps->pTOP->pn;
	return e;
}
void bl(pSTACK ps)
{
	pNODE pt;
	pt=ps->pTOP;
	while(pt->pn!=NULL)
	{
		printf("%d ",pt->a);
		pt=pt->pn;
	}
	printf("\n");
}
int main()
{
	STACK s1,s2;
	init(&s1);
	init(&s2);
	push(&s1,1);
	push(&s1,2);
	push(&s1,3);
	bl(&s1);
	push(&s2,pop(&s1));
	push(&s2,pop(&s1));
	push(&s2,pop(&s1));
	bl(&s2);
}

